# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.

# JupyterHub docker compose configuration file
services:
  hub:
    pull_policy: build
    build:
      context: .
      dockerfile: Dockerfile.jupyterhub
      args:
        JUPYTERHUB_VERSION: latest
    restart: always
    image: jupyterhub
    container_name: jupyterhub
    networks:
      - jupyterhub-network
    volumes:
      # The JupyterHub configuration file
      - "./jupyterhub_config.py:/srv/jupyterhub/jupyterhub_config.py:ro"
      # Bind Docker socket on the host so we can connect to the daemon from
      # within the container
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      # Bind Docker volume on host for JupyterHub database and cookie secrets
      - "jupyterhub-data:/data"
    environment:
      # This username will be a JupyterHub admin
      JUPYTERHUB_ADMIN: admin
      # All containers will join this network
      DOCKER_NETWORK_NAME: jupyterhub-network
      # JupyterHub will spawn this Notebook image for users
      DOCKER_NOTEBOOK_IMAGE: jupyter-workshop:latest
      # Notebook directory inside user image
      DOCKER_NOTEBOOK_DIR: /home/jovyan/work
      DATA_DIRECTORY: ${DATA_DIRECTORY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jupyterhub.rule=Host(`workshop.int.bnext.bio`)"
      - "traefik.http.routers.jupyterhub.entrypoints=websecure"
      - "traefik.http.services.jupyterhub.loadbalancer.server.port=8000"
      - "traefik.http.routers.jupyterhub.tls.certresolver=myresolver"

  singleuser-image:
    pull_policy: build
    build:
      context: .
      dockerfile: Dockerfile.notebook
    image: jupyter-workshop:latest
    container_name: singleuser-build
    networks:
      - jupyterhub-network
    # We don't actually run this container, just build the image
    entrypoint: /bin/true

volumes:
  jupyterhub-data:

networks:
  jupyterhub-network:
      name: jupyterhub-network
